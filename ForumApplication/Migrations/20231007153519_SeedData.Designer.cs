// <auto-generated />
using System;
using ForumApplication.API.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ForumApplication.API.Migrations
{
    [DbContext(typeof(ForumApplicationContext))]
    [Migration("20231007153519_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.22");

            modelBuilder.Entity("ForumApplication.API.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("PostId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedTime = new DateTime(2023, 10, 6, 16, 35, 19, 116, DateTimeKind.Utc).AddTicks(1269),
                            PostId = 1,
                            Text = "The most sustainable city in the world - Gothenburg"
                        },
                        new
                        {
                            Id = 2,
                            CreatedTime = new DateTime(2023, 10, 7, 13, 35, 19, 116, DateTimeKind.Utc).AddTicks(1270),
                            PostId = 1,
                            Text = "I like it"
                        },
                        new
                        {
                            Id = 3,
                            CreatedTime = new DateTime(2023, 10, 7, 14, 35, 19, 116, DateTimeKind.Utc).AddTicks(1271),
                            PostId = 3,
                            Text = "Good Luck"
                        },
                        new
                        {
                            Id = 4,
                            CreatedTime = new DateTime(2023, 10, 6, 16, 35, 19, 116, DateTimeKind.Utc).AddTicks(1272),
                            PostId = 1,
                            Text = "Nice"
                        });
                });

            modelBuilder.Entity("ForumApplication.API.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Detail")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedTime = new DateTime(2023, 10, 6, 15, 35, 19, 116, DateTimeKind.Utc).AddTicks(1175),
                            Detail = "There is alot to learn about Sweden",
                            Title = "New to Sweden"
                        },
                        new
                        {
                            Id = 2,
                            CreatedTime = new DateTime(2023, 10, 5, 15, 35, 19, 116, DateTimeKind.Utc).AddTicks(1180),
                            Detail = "No details available",
                            Title = "Looking for work"
                        },
                        new
                        {
                            Id = 3,
                            CreatedTime = new DateTime(2023, 10, 7, 12, 35, 19, 116, DateTimeKind.Utc).AddTicks(1181),
                            Detail = "Computer Engineer with 4 years of experience in C#.net web application \r\ndevelopment but I am open to learn new skills. I came to Sweden 5 years ago and \r\nfocused on learning Swedish. I have done internship at a start-up company called \r\nYoin Technologies where I worked as a backend developer and worked with Azure \r\namong other things. Marcus Melberg, the CTO, was my supervisor at Yoin. Marcus is \r\nmy refernce and you are welcome to contact him to get more information. You can \r\nreach Marcus at 0702 335 263.\r\nI like to learn new things and I am looking for new challenges to further develop my \r\nknowlegde and skills. I want to contribute in the field of IT and increase my \r\ncompetance through work. I am a hard working and ambitious woman who needs a \r\nchance to grow professionally",
                            Title = "Bio Madiha Gul"
                        });
                });

            modelBuilder.Entity("ForumApplication.API.Entities.Comment", b =>
                {
                    b.HasOne("ForumApplication.API.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("ForumApplication.API.Entities.Post", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
